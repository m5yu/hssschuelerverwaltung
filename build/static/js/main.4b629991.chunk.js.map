{"version":3,"sources":["AddStudent.js","Modal.js","StudentOverview.js","App.js","serviceWorker.js","index.js"],"names":["AddStudent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleCustomSelect","selectedOption","selectedCompanyName","value","split","selcetedCompanyJob","selectedCompany","state","distinctCompanies","filter","company","job","student","setState","handleLoginChange","event","user","target","name","handleLoginSubmit","data","JSON","stringify","fetch","method","headers","Content-Type","body","then","res","checkHTTPStatus","httpResponse","loginVisibility","isAuthenticated","status","setAuthentification","username","password","primaryContactPerson","secondaryContactPerson","caregiverVisibility","handleChange","bind","assertThisInitialized","handleSubmit","handlePrimaryContactPersonChange","handleSecondaryContactPersonChange","handleCompanyChange","parseCompanies","toggleCaregiver","renderCheckbox","_this2","react_default","a","createElement","type","onChange","checked","visibility","replace","preventDefault","studentToSave","json","catch","error","console","log","concat","response","id","alert","map","label","prevProps","prevState","_this3","result","companies","location","studentId","germanIsPrimaryLanguage","secondSchoolVisit","zusatzqualifikationFachhochschule","firstName","_this4","onSubmit","className","required","placeholder","lastName","zipCode","city","street","email","phone","kreis","dateOfBirth","cityOfBirth","countryOfBirth","denomination","motherTongue","gender","style","display","maritalStatus","primaryNationality","secondaryNationality","previousSchool","educationalBackground","foreignLanguages","join","classId","react_select_esm","options","jobNr","instructor","trainingStart","trainingEnd","trainingShortening","kammer","onClick","Component","Modal","show","position","top","bottom","left","right","backgroundColor","padding","fontWeight","borderRadius","width","height","margin","onApprove","onClose","StudentOverview","toggleModal","isOpen","studentSelected","updateStudentList","studentList","students","approveDelete","studentid","mode","columns","Header","accessor","filterable","Cell","Link","to","pathname","original","getLinkObject","resizable","es","defaultPageSize","src_Modal","App","href","HashRouter","Switch","Route","exact","path","render","src_AddStudent_0","assign","src_StudentOverview","Redirect","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b629991.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Select from 'react-select';\n\nclass AddStudent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            student:    {\n                            primaryContactPerson: {},\n                            secondaryContactPerson: {},\n                            company: {}\n                        },\n            user: {\n                username: '',\n                password: ''\n            },\n            caregiverVisibility : 'none',\n            loginVisibility: 'none',\n            distinctCompanies : []\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handlePrimaryContactPersonChange = this.handlePrimaryContactPersonChange.bind(this);\n        this.handleSecondaryContactPersonChange = this.handleSecondaryContactPersonChange.bind(this);\n        this.handleCompanyChange = this.handleCompanyChange.bind(this);\n        this.parseCompanies = this.parseCompanies.bind(this);\n        this.toggleCaregiver = this.toggleCaregiver.bind(this);\n        this.renderCheckbox = this.renderCheckbox.bind(this);\n    }\n\n    renderCheckbox(){\n        if(this.state.caregiverVisibility === 'none') {\n            return  <input type=\"checkbox\" onChange={(event)=> this.toggleCaregiver(event)}/>;\n        }\n        return  <input type=\"checkbox\" onChange={(event)=> this.toggleCaregiver(event)} checked/>;\n    }\n\n    toggleCaregiver(event){\n        let visibility = event.target.checked ? 'grid' : 'none';\n        this.setState({\n            caregiverVisibility : visibility\n        })\n    }\n\n    handleChange(event) {\n        const name = event.target.name;\n        let student = this.state.student;\n        let value = event.target.value === 'true' ? true : event.target.value === 'false' ? false : event.target.value;\n        if(name === 'foreignLanguages') {\n            value = value.replace(/\\s/g,'').split(',');\n        }\n        student[name] = value;\n        this.setState({\n            student: student\n        })\n    }\n\n    handleCustomSelect = (selectedOption) => {\n        let selectedCompanyName = selectedOption.value.split('~?&')[0];\n        let selcetedCompanyJob = selectedOption.value.split('~?&')[1];\n        let selectedCompany = this.state.distinctCompanies.filter(company => company.company===selectedCompanyName&company.job===selcetedCompanyJob)[0];\n        let student = this.state.student;\n        student.company = selectedCompany;\n\n        this.setState({\n            selectedCompany: selectedOption,\n            student: student\n        });\n\n    }\n\n    handleLoginChange = (event) => {\n        let user = this.state.user;\n        user[event.target.name] = event.target.value;\n        this.setState({\n            user: user \n        })\n    }\n\n    handleLoginSubmit = (event) => {\n        let data = JSON.stringify(this.state.user)\n        fetch(`http://localhost:8080/login`, {\n          method: 'POST',\n          headers: {\n              \"Content-Type\": \"application/json\",\n          },\n          body: data\n      })\n      .then(res => this.checkHTTPStatus(res))\n    }\n\n    checkHTTPStatus = (httpResponse) => {\n        \n        let user = {username: '', password: ''}\n        let isAuthenticated = false;\n        let loginVisibility;\n          \n          if(httpResponse.status===200) {\n            isAuthenticated = true;\n            loginVisibility = 'none';\n          }\n          this.props.setAuthentification(isAuthenticated);\n          this.setState({ \n            user: user, \n            loginVisibility: loginVisibility\n        })\n    }\n\n    handlePrimaryContactPersonChange(event) {\n        const name = event.target.name.replace('primaryContactPerson.','');\n        let student = this.state.student;\n        let value = event.target.value\n        student.primaryContactPerson[name] = value;\n        this.setState({\n            student: student,\n        })\n    }\n\n    handleSecondaryContactPersonChange(event) {\n        const name = event.target.name.replace('secondaryContactPerson.','');\n        let student = this.state.student;\n        let value = event.target.value\n        student.secondaryContactPerson[name] = value;\n        this.setState({\n            student: student\n        })\n    }\n\n    handleCompanyChange(event) {\n        const name = event.target.name.replace('company.','');\n        let student = this.state.student;\n        let value = event.target.value\n        student.company[name] = value;\n        this.setState({\n            student: student,\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let studentToSave = JSON.stringify(this.state.student);\n        fetch(`http://localhost:8080/schule`, {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: studentToSave\n        })\n        .then(res => res.json())\n        .catch(error => console.log(`Error: ${error}`))\n        .then(response => {\n                if(response.id != null)\n                {\n                    alert('Schüler wurde erfolgreich gespeichert');                }\n            });\n    }\n\n    parseCompanies() {\n        if(this.state.distinctCompanies != null) {\n            return this.state.distinctCompanies\n                .map(company => ({value: company.company+'~?&'+company.job, label: company.company+' - '+company.job}));\n        }\n        return {value: 'TestUnternehmen', label: 'TestLabel'};        \n    }\n\n    componentDidUpdate(prevProps,prevState) {\n        \n    }\n\n    componentDidMount() {\n        fetch(`http://localhost:8080/schule/company`)\n        .then(result => result.json())\n        .then(companies => {\n            this.setState({\n                distinctCompanies : companies\n            });\n        });\n        if(this.props.location.studentId != null)\n        {\n            console.log('found valid studentid');\n        fetch(`http://localhost:8080/schule/byId/${this.props.location.studentId}`)\n        .then(result => result.json())\n        .then(student => {\n            student.germanIsPrimaryLanguage = student.id == null ? null : student.germanIsPrimaryLanguage;\n            student.secondSchoolVisit = student.id == null ? null : student.secondSchoolVisit;\n            student.zusatzqualifikationFachhochschule = student.id == null ? null : student.zusatzqualifikationFachhochschule;\n            let visibility = student.id == null ? 'none' : student.secondaryContactPerson.firstName == null ? 'none' : 'grid';\n            this.setState({\n                student: student,\n                caregiverVisibility : visibility\n            });\n        });\n    }\n    }\n\n    render() {\n\n        if(!this.props.isAuthenticated) {\n            return (\n                <div className=\"login\" style={{display: this.state.visibility}}>\n          \n                    Bitte einloggen\n                    <br/>\n                    <input required type='username' name='username' value={this.state.user.username} placeholder='Benutzername' onChange={(event) => this.handleLoginChange(event)}/>\n                    <input required type='password' name='password' value={this.state.user.password} placeholder='Passwort' onChange={(event) => this.handleLoginChange(event)}/>\n                    <br/>\n                    <br/>\n                    <button type='submit' onClick={this.handleLoginSubmit}>Login</button>\n            \n                </div>);\n        }\n\n        return (\n           <div>\n            <form onSubmit={(event) => this.handleSubmit(event)}>\n            <div className='formWrapper'>\n            <div className='personalInfo'>\n                    <div>\n                        <label>\n                            Vorname *\n                            <br/>\n                            <input type='text' required name='firstName' placeholder='' value={this.state.student.firstName || ''} \n                            onChange={(event)=>this.handleChange(event)}/>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Nachname *\n                            <br/>\n                            <input type='text' required name='lastName' placeholder='' value={this.state.student.lastName || ''} \n                            onChange={(event)=>this.handleChange(event)}/>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Postleitzahl *\n                            <br/>\n                            <input type='text' required name='zipCode' placeholder='' value={this.state.student.zipCode || ''} \n                            onChange={(event)=>this.handleChange(event)}/>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Stadt *\n                            <br/>\n                            <input type='text' required name='city' placeholder='' value={this.state.student.city || ''} \n                            onChange={(event)=>this.handleChange(event)}/>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Straße *\n                            <br/>\n                            <input type='text' required name='street' placeholder='' value={this.state.student.street || ''} \n                            onChange={(event)=>this.handleChange(event)}/>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Email *\n                            <br/>\n                            <input type='email' required name='email' placeholder='' value={this.state.student.email || ''} \n                            onChange={(event)=>this.handleChange(event)}/>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Telefonnummer *\n                            <br/>\n                            <input required type='text' name='phone' placeholder='062223055100' value={this.state.student.phone || ''} \n                            onChange={(event)=>this.handleChange(event)}/>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Kreis *\n                            <br/>\n                            <input type='text' required name='kreis' placeholder='' value={this.state.student.kreis || ''} \n                            onChange={(event)=>this.handleChange(event)}/>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Bundesland *\n                            <br/>\n                            <input type='text' required name='state' placeholder='Baden-Württemberg' value={this.state.student.state || ''} \n                            onChange={(event)=>this.handleChange(event)}/>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Geburtsdatum *\n                            <br/>\n                            <input type='date' required name='dateOfBirth' placeholder='Geburtsdatum' value={this.state.student.dateOfBirth || ''} \n                            onChange={(event)=>this.handleChange(event)}/>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Geburtsort *\n                            <br/>\n                            <input type='text' required name='cityOfBirth' placeholder='' value={this.state.student.cityOfBirth || ''} \n                            onChange={(event)=>this.handleChange(event)}/>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Geburtsland *\n                            <br/>\n                            <input type='text' required name='countryOfBirth' placeholder='' value={this.state.student.countryOfBirth || ''} \n                            onChange={(event)=>this.handleChange(event)}/>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Konfession *\n                            <br/>\n                            <input type='text' required name='denomination' placeholder='z.B. ev' value={this.state.student.denomination || ''} \n                            onChange={(event)=>this.handleChange(event)}/>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Muttersprache *\n                            <br/>\n                            <input type='text' required name='motherTongue' placeholder='' value={this.state.student.motherTongue || ''} \n                            onChange={(event)=>this.handleChange(event)}/>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Geschlecht *\n                            <br/>\n                            <select name='gender' required value={this.state.student.gender==null ? '' : this.state.student.gender} \n                            onChange={(event)=>this.handleChange(event)}>\n                                <option name='gender' value='' style={{display: 'none'}}> -- Bitte auswählen -- </option>\n                                <option name='gender' value='male'>Männlich</option>\n                                <option name='gender' value='female'>Weiblich</option>\n                            </select>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Familienstand \n                            <br/>\n                            <select name='maritalStatus' required value={this.state.student.maritalStatus== null ? '' : this.state.student.maritalStatus} \n                            onChange={(event)=>this.handleChange(event)}>\n                                <option name='maritalStatus' value='' style={{display: 'none'}}> -- Bitte auswählen -- </option>\n                                <option name='maritalStatus' value='single'>Ledig</option>\n                                <option name='maritalStatus' value='married'>Verheiratet</option>\n                            </select>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Nationalität 1 *\n                            <br/>\n                            <input type='text' required name='primaryNationality' value={this.state.student.primaryNationality || ''} \n                            onChange={(event)=>this.handleChange(event)}/>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Nationalität 2\n                            <br/>\n                            <input type='text' name='secondaryNationality' value={this.state.student.secondaryNationality || ''} \n                            onChange={(event)=>this.handleChange(event)}/>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Welche Sprache sprechen Sie in Ihrer Familie bzw. im häuslichen Umfeld \n                            <br/>\n                            <select name='germanIsPrimaryLanguage' required value={this.state.student.germanIsPrimaryLanguage == null ? '' : this.state.student.germanIsPrimaryLanguage} \n                            onChange={(event)=>this.handleChange(event)}>\n                                <option name='germanIsPrimaryLanguage' value='' style={{display: 'none'}}> -- Bitte auswählen -- </option>\n                                <option name='germanIsPrimaryLanguage' value={true}>Deutsch</option>\n                                <option name='germanIsPrimaryLanguage' value={false}>Nicht Deutsch</option>\n                            </select>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Zuletzt besuchte Schule *\n                            <br/>\n                            <select required name='previousSchool' value={this.state.student.previousSchool == null ? '' : this.state.student.previousSchool} \n                            onChange={(event)=>this.handleChange(event)}>\n                                <option name='previousSchool' value='' style={{display: 'none'}}> -- Bitte auswählen -- </option>\n                                <option name='previousSchool' value='Gemeinschaftsschule'>Gemeinschaftsschule</option>\n                                <option name='previousSchool' value='Werkrealschule'>Werkrealschule</option>\n                                <option name='previousSchool' value='Realschule'>Realschule</option>\n                                <option name='previousSchool' value='Gymnasium'>Gymnasium</option>\n                                <option name='previousSchool' value='gewerblicheBerufsschule'>gewerbliche Berufsschule</option>\n                                <option name='previousSchool' value='kaufmännischeBerufsschule'>kaufmännische Berufsschule</option>\n                                <option name='previousSchool' value='hauswirtschaftlicheBerufsschule'>hauswirtschaftliche Berufsschule</option>\n                            </select>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Vorbildung *\n                            <br/>\n                            <select required name='educationalBackground' value={this.state.student.educationalBackground == null ? '' : this.state.student.educationalBackground} \n                            onChange={(event)=>this.handleChange(event)}>\n                                <option name='educationalBackground' value='' style={{display: 'none'}}> -- Bitte auswählen -- </option>\n                                <option name='educationalBackground' value='T'>Ohne Hauptschulabschluss (T)</option>\n                                <option name='educationalBackground' value='H'>Mit Hauptschulabschluss (H)</option>\n                                <option name='educationalBackground' value='WR'>Werkrealschulabschluss (WR)</option>\n                                <option name='educationalBackground' value='G10'>Mittlerer Bildungsabschluss (G10)</option>\n                                <option name='educationalBackground' value='FS'>Fachschulreife (FS)</option>\n                                <option name='educationalBackground' value='FHR'>Fachhochschulreife (FHR)</option>\n                                <option name='educationalBackground' value='ABI'>Hochschulereife (ABI)</option>\n                            </select>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                    Fremdsprachen\n                    <br/>\n                    <input type='text' name='foreignLanguages' placeholder='Englisch,Französisch' value={this.state.student.foreignLanguages == null ? '' : this.state.student.foreignLanguages.join(',')}\n                    onChange={(event)=>this.handleChange(event)}/>\n                    </label>\n                    </div>\n                    </div>\n                    <div className='contactPerson'>\n                    <label>\n                        Bezugsperson 1\n                        <br/>\n                        <div className='contactPersonGrid'>\n                        <label>\n                            Art der Bezugsperson *\n                        <select required name='primaryContactPerson.type' value={this.state.student.primaryContactPerson.type == null ? '' : this.state.student.primaryContactPerson.type} \n                        onChange={(event)=>this.handlePrimaryContactPersonChange(event)}>\n                            <option name='primaryContactPerson.type' value='' style={{display: 'none'}}> -- Bitte auswählen -- </option>\n                            <option name='primaryContactPerson.type' value='father'>Vater</option>\n                            <option name='primaryContactPerson.type' value='mother'>Mutter</option>\n                            <option name='primaryContactPerson.type' value='spouse'>Ehegatte</option>\n                            <option name='primaryContactPerson.type' value='caregiver'>Bezugsperson</option>\n                            <option name='primaryContactPerson.type' value='asylum'>Heim</option>\n                        </select>\n                        </label>\n                        <label>\n                        Vorname *\n                        <br/>\n                        <input type='text' required name='primaryContactPerson.firstName' placeholder='' value={this.state.student.primaryContactPerson.firstName || ''} \n                        onChange={(event)=>this.handlePrimaryContactPersonChange(event)}/>\n                        </label>\n                        <label>\n                        Nachname *\n                        <br/>\n                        <input type='text' required name='primaryContactPerson.lastName' placeholder='' value={this.state.student.primaryContactPerson.lastName || ''} \n                        onChange={(event)=>this.handlePrimaryContactPersonChange(event)}/>\n                    </label>\n                    <label>\n                        Postleitzahl *\n                        <br/>\n                        <input type='text' required name='primaryContactPerson.zipCode' placeholder='' value={this.state.student.primaryContactPerson.zipCode || ''} \n                        onChange={(event)=>this.handlePrimaryContactPersonChange(event)}/>\n                    </label>\n                    <label>\n                        Stadt *\n                        <br/>\n                        <input type='text' required name='primaryContactPerson.city' placeholder='' value={this.state.student.primaryContactPerson.city || ''} \n                        onChange={(event)=>this.handlePrimaryContactPersonChange(event)}/>\n                    </label>\n                    <label>\n                        Straße *\n                        <br/>\n                        <input type='text' required name='primaryContactPerson.street' placeholder='' value={this.state.student.primaryContactPerson.street || ''} \n                        onChange={(event)=>this.handlePrimaryContactPersonChange(event)}/>\n                    </label>\n                    <label>\n                        Email *\n                        <br/>\n                        <input type='email' required name='primaryContactPerson.email' placeholder='' value={this.state.student.primaryContactPerson.email || ''} \n                        onChange={(event)=>this.handlePrimaryContactPersonChange(event)}/>\n                    </label>\n                    <label>\n                        Telefonnummer *\n                        <br/>\n                        <input type='text' required name='primaryContactPerson.phone' placeholder='062223055100' value={this.state.student.primaryContactPerson.phone || ''} \n                        onChange={(event)=>this.handlePrimaryContactPersonChange(event)}/>\n                    </label>\n                    </div> \n                    </label>\n                    </div>\n                    <div className='secondaryContactPerson'>\n                        Bezugsperson 2\n                        {this.renderCheckbox()}\n                        <br/>\n                        <div className='secondaryContactPersonGrid' style={{display: this.state.caregiverVisibility}}>\n                        <label>\n                            Art der Bezugsperson *\n                        <select name='secondaryContactPerson.type' value={this.state.student.secondaryContactPerson.type == null ? '' : this.state.student.secondaryContactPerson.type} \n                        onChange={(event)=>this.handleSecondaryContactPersonChange(event)}>\n                            <option name='secondaryContactPerson.type' value='' style={{display: 'none'}}> -- Bitte auswählen -- </option>\n                            <option name='secondaryContactPerson.type' value='father'>Vater</option>\n                            <option name='secondaryContactPerson.type' value='mother'>Mutter</option>\n                            <option name='secondaryContactPerson.type' value='spouse'>Ehegatte</option>\n                            <option name='secondaryContactPerson.type' value='caregiver'>Bezugsperson</option>\n                            <option name='secondaryContactPerson.type' value='asylum'>Heim</option>\n                        </select>\n                        </label>\n                        <label>\n                        Vorname *\n                        <br/>\n                        <input type='text' name='secondaryContactPerson.firstName' placeholder='' value={this.state.student.secondaryContactPerson.firstName || ''} \n                        onChange={(event)=>this.handleSecondaryContactPersonChange(event)}/>\n                        </label>\n                        <label>\n                        Nachname *\n                        <br/>\n                        <input type='text' name='secondaryContactPerson.lastName' placeholder='' value={this.state.student.secondaryContactPerson.lastName || ''} \n                        onChange={(event)=>this.handleSecondaryContactPersonChange(event)}/>\n                    </label>\n                    <label>\n                        Postleitzahl *\n                        <br/>\n                        <input type='text' name='secondaryContactPerson.zipCode' placeholder='' value={this.state.student.secondaryContactPerson.zipCode || ''} \n                        onChange={(event)=>this.handleSecondaryContactPersonChange(event)}/>\n                    </label>\n                    <label>\n                        Stadt *\n                        <br/>\n                        <input type='text' name='secondaryContactPerson.city' placeholder='' value={this.state.student.secondaryContactPerson.city || ''} \n                        onChange={(event)=>this.handleSecondaryContactPersonChange(event)}/>\n                    </label>\n                    <label>\n                        Straße *\n                        <br/>\n                        <input type='text' name='secondaryContactPerson.street' placeholder='' value={this.state.student.secondaryContactPerson.street || ''} \n                        onChange={(event)=>this.handleSecondaryContactPersonChange(event)}/>\n                    </label>\n                    <label>\n                        Email *\n                        <br/>\n                        <input type='email' name='secondaryContactPerson.email' placeholder='' value={this.state.student.secondaryContactPerson.email || ''} \n                        onChange={(event)=>this.handleSecondaryContactPersonChange(event)}/>\n                    </label>\n                    <label>\n                        Telefonnummer *\n                        <br/>\n                        <input type='text' name='secondaryContactPerson.phone' placeholder='062223055100' value={this.state.student.secondaryContactPerson.phone || ''} \n                        onChange={(event)=>this.handleSecondaryContactPersonChange(event)}/>\n                    </label> \n                    </div>\n                    </div>\n                    <div className='additionalInfo'>\n                    <label>\n                        War der Schüler schon einmal an unserer Schule angemeldet? *\n                        <br/>\n                        <select required name='secondSchoolVisit' value={this.state.student.secondSchoolVisit == null ? '' : this.state.student.secondSchoolVisit} \n                        onChange={(event)=>this.handleChange(event)}>\n                            <option name='secondSchoolVisit' value='' style={{display: 'none'}}> -- Bitte auswählen -- </option>\n                            <option name='secondSchoolVisit' value={true}>Ja</option>\n                            <option name='secondSchoolVisit' value={false}>Nein</option>\n                        </select>\n                    </label>\n                    <label>\n                        Teilnahme an der Zusatzqualifikation zur Fachhochschulreife *\n                        <br/>\n                        <select required name='zusatzqualifikationFachhochschule' value={this.state.student.zusatzqualifikationFachhochschule == null ? '' : this.state.student.zusatzqualifikationFachhochschule} \n                        onChange={(event)=>this.handleChange(event)}>\n                            <option name='zusatzqualifikationFachhochschule' value='' style={{display: 'none'}}> -- Bitte auswählen -- </option>\n                            <option name='zusatzqualifikationFachhochschule' value={true}>Ja</option>\n                            <option name='zusatzqualifikationFachhochschule' value={false}>Nein</option>\n                        </select>\n                    </label>\n                    <label>\n                        Klasse *\n                        <br/>\n                        <input type='text' required name='classId' placeholder='E3FIAE1' value={this.state.student.classId || ''} \n                        onChange={(event)=>this.handleChange(event)}/>\n                    </label>\n                    </div>\n                    <div className='company'>\n                    Beruf/Betrieb\n                    <div className='customSelectWrapper'>\n                    <Select\n                        className='customSelect'\n                        value={this.state.selectedCompany}\n                        onChange={this.handleCustomSelect}\n                        options={this.parseCompanies()}\n                    />\n                    </div>\n                    <div className='companyGrid'>\n                    <label>\n                        Beruf *\n                        <br/>\n                        <input type='text' required name='company.job' placeholder='' value={this.state.student.company.job || ''} \n                        onChange={(event)=>this.handleCompanyChange(event)}/>\n                    </label>\n                    <label>\n                        Berufs-Nr. *\n                        <br/>\n                        <input type='text' required name='company.jobNr' placeholder='12345' value={this.state.student.company.jobNr || ''} \n                        onChange={(event)=>this.handleCompanyChange(event)}/>\n                    </label>\n                    <label>\n                        Betrieb *\n                        <br/>\n                        <input type='text' required name='company.company' placeholder='' value={this.state.student.company.company || ''} \n                        onChange={(event)=>this.handleCompanyChange(event)}/>\n                    </label>\n                    <label>\n                        Postleitzahl *\n                        <br/>\n                        <input type='text' name='company.zipCode' placeholder='' value={this.state.student.company.zipCode || ''} \n                        onChange={(event)=>this.handleCompanyChange(event)}/>\n                    </label>\n                    <label>\n                        Stadt *\n                        <br/>\n                        <input type='text' name='company.city' placeholder='' value={this.state.student.company.city || ''} \n                        onChange={(event)=>this.handleCompanyChange(event)}/>\n                    </label>\n                    <label>\n                        Straße *\n                        <br/>\n                        <input type='text' name='company.street' placeholder='' value={this.state.student.company.street || ''} \n                        onChange={(event)=>this.handleCompanyChange(event)}/>\n                    </label>\n                    <label>\n                        Email *\n                        <br/>\n                        <input type='email' required name='company.email' placeholder='' value={this.state.student.company.email || ''} \n                        onChange={(event)=>this.handleCompanyChange(event)}/>\n                    </label>\n                    <label>\n                        Telefonnummer *\n                        <br/>\n                        <input type='text' required name='company.phone' placeholder='062223055100' value={this.state.student.company.phone || ''} \n                        onChange={(event)=>this.handleCompanyChange(event)}/>\n                    </label> \n                    <label>\n                        Ausbilder *\n                        <br/>\n                        <input type='text' required name='company.instructor' placeholder='' value={this.state.student.company.instructor || ''} \n                        onChange={(event)=>this.handleCompanyChange(event)}/>\n                    </label> \n                    <label>\n                        Beginn *\n                        <input type='date' required name='trainingStart' placeholder='' value={this.state.student.trainingStart || ''} \n                        onChange={(event)=>this.handleChange(event)}/>\n                    </label>\n                    <label>\n                        und Ende *\n                        <input type='date' required name='trainingEnd' placeholder='' value={this.state.student.trainingEnd || ''} \n                        onChange={(event)=>this.handleChange(event)}/>\n                        der Ausbildung\n                    </label>\n                    <label>\n                        Ausbildungszeitverkürzung? *\n                        <br/>\n                        <select required name='trainingShortening' value={this.state.student.trainingShortening == null ? '' : this.state.student.trainingShortening} \n                        onChange={(event)=>this.handleChange(event)}>\n                            <option name='secondSchoolVisit' value='empty' style={{display: 'none'}}> -- Bitte auswählen -- </option>\n                            <option name='secondSchoolVisit' value={true}>Ja</option>\n                            <option name='secondSchoolVisit' value={false}>Nein</option>\n                        </select>\n                    </label>\n                    <label>\n                        Kammer *\n                        <br/>\n                        <select required name='company.kammer' value={this.state.student.company.kammer == null ? '' : this.state.student.company.kammer} \n                        onChange={(event)=>this.handleCompanyChange(event)}>\n                            <option name='secondSchoolVisit' value='' style={{display: 'none'}}> -- Bitte auswählen -- </option>\n                            <option name='secondSchoolVisit' value='IHK'>IHK</option>\n                            <option name='secondSchoolVisit' value='HWK'>HWK</option>\n                        </select>\n                    </label>\n                    </div>\n                    </div>\n                    <div className='submitBtn'>\n                    <input type='submit' className='btn btn-info btn-large linkmargin' value='Schüler speichern'/>\n                    <br/>\n                    * Pflichtfelder\n                    </div>\n                    </div>\n               </form>\n           </div>\n        )\n    }\n}\n\nexport default AddStudent;\n","import React, { Component } from 'react';\n\nclass Modal extends Component {\n  render() {\n    // Render nothing if the \"show\" prop is false\n    if (!this.props.show) {\n      return null;\n    }\n\n    // The gray background\n    const backdropStyle = {\n      position: 'fixed',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: 150,\n      fontWeight: 'bold',\n    };\n\n    // The modal \"window\"\n    const modalStyle = {\n      backgroundColor: '#fff',\n      borderRadius: 5,\n      width: 500,\n      height: 300,\n      margin: '0 auto',\n      padding: 30,\n    };\n\n    return (\n      <div className=\"backdropCustom\" onClick={this.props.onClick} style={backdropStyle}>\n        <div className=\"modalCustom\" style={modalStyle}>\n          {this.props.student.firstName+' '+this.props.student.lastName} wirklich löschen?\n          <div className=\"footer\">\n            <button className='btn btn-danger customBtn' onClick={() => this.props.onApprove(this.props.student.id)}>Löschen</button>\n            <button className='btn btn-secondary customBtn' onClick={this.props.onClose}>Abbrechen</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactTable from 'react-table';\nimport Modal from './Modal.js';\nimport \"react-table/react-table.css\";\n\n\nclass StudentOverview extends Component {\n    constructor(props) {\n        super(props);\n    \n\n    this.state = {\n        students: [],\n        isOpen: false,\n        studentSelected: {},\n        loginVisibility: 'block',\n        user: {\n            username: '',\n            password: ''\n        }\n      };\n    } \n      async componentDidMount() {\n        fetch(`http://localhost:8080/login`, {\n            method: \"GET\",\n            mode: \"no-cors\"\n        })\n        .then(response => response.json())\n        .catch(error => console.log('error while fetching login'))\n        .then(result => console.log(JSON.stringify(result)))\n        .catch(error => console.log('error while fetching login'))\n        /*this.updateStudentList();*/\n    }\n\n    toggleModal = (props) => {\n        this.setState({\n          isOpen: !this.state.isOpen,\n          studentSelected: props\n        });\n      };\n\n      updateStudentList = () => {\n        fetch(`http://localhost:8080/schule`)\n        .then(result => result.json())\n        .then(studentList => {\n            this.setState({\n                students: studentList\n            });\n        });\n      }\n\n      approveDelete = (studentid) => {\n        fetch(`http://localhost:8080/schule/${studentid}`, {\n            method: 'delete'\n        }).then(() => {\n            this.setState({\n                studentSelected: {},            \n        });\n        this.toggleModal();\n        this.updateStudentList();\n        })\n      }\n\n      handleChange = (event) => {\n        let user = this.state.user;\n        user[event.target.name] = event.target.value;\n        this.setState({\n            user: user \n        })\n    }\n\n    checkHTTPStatus = (httpResponse) => {\n        \n        let user = {username: '', password: ''}\n        let isAuthenticated = false;\n        let loginVisibility;\n          \n          if(httpResponse.status===200) {\n            isAuthenticated = true;\n            loginVisibility = 'none';\n          }\n          this.props.setAuthentification(isAuthenticated);\n          this.setState({ \n            user: user, \n            loginVisibility: loginVisibility\n        })\n    }\n\n      handleSubmit = (event) => {\n          let loginData = {};\n          fetch(`http://localhost:8080/login`)\n          .then(response => response.json())\n          .then(result => console.log(JSON.stringify(result)))\n\n        let data = JSON.stringify(this.state.user)\n        fetch(`http://localhost:8080/schule/login`, {\n          method: 'POST',\n          headers: {\n              \"Content-Type\": \"application/json\",\n          },\n          body: data\n      })\n      .then(res => this.checkHTTPStatus(res))\n    }\n\n    componentDidUpdate()\n    {\n    }\n\n    render() {\n\n        function getLinkObject(props)\n        {\n            const newLink = {\n                pathname: \"/add-student\",\n                studentId: props.original.id\n            }\n            return newLink;\n        }\n\n        const columns = [{\n            Header: 'Nachname',\n            accessor: 'lastName',\n            filterable: true\n          }, {\n            Header: 'Vorname',\n            accessor: 'firstName',\n            filterable: true\n          }, {\n            Header: 'Email',\n            accessor: 'email',\n            filterable: true\n          }, {\n            Header: 'Klasse',\n            accessor: 'classId',\n            filterable: true\n          }, {\n            Header: 'Unternehmen',\n            accessor: 'company.company',\n            filterable: true\n          }, {\n              Header: '',\n              Cell: props => (\n                    <div>\n                        <Link to={getLinkObject(props)}><i className='fa fa-pencil fa-lg editStudentIcon'></i></Link>\n                    </div>\n              ),\n              width: 50,\n              resizable: false\n          }, {\n            Header: '',\n            Cell: props => (\n                  <div>\n                      <i onClick={() => this.toggleModal(props.original)} className='fa fa-trash fa-lg deleteStudentIcon'></i>\n                  </div>\n            ),\n            width: 50,\n            resizable: false\n        }\n          ]\n\n          if(!this.props.isAuthenticated){\n              return (\n                <div className=\"login\" style={{display: this.state.loginVisibility}}>\n          \n                    Bitte einloggen\n                    <br/>\n                    <input required type='username' name='username' value={this.state.user.username} placeholder='Benutzername' onChange={(event) => this.handleChange(event)}/>\n                    <input required type='password' name='password' value={this.state.user.password} placeholder='Passwort' onChange={(event) => this.handleChange(event)}/>\n                    <br/>\n                    <br/>\n                    <button type='submit' onClick={this.handleSubmit}>Login</button>\n            \n                </div>);\n          }\n\n        return (\n            <div>\n                <div className='tableWrapper'>\n                    <ReactTable\n                        className={'-striped -highlight'}\n                        data={this.state.students}\n                        columns={columns}\n                        defaultPageSize={20}\n                    />\n                </div>\n                    <Modal student={this.state.studentSelected} show={this.state.isOpen} onApprove={this.approveDelete} onClose={this.toggleModal}>\n                    </Modal>\n            </div>\n        )\n    }\n}\n\nexport default StudentOverview;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport AddStudent from './AddStudent';\nimport StudentOverview from './StudentOverview';\nimport './App.css';\nimport './index.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isAuthenticated: false,\n      user: {\n        username: '',\n        password: ''\n      },\n    }\n  }\n\n  setAuthentification = (isAuthenticated) => {\n    console.log('Hallo aus App')\n    console.log(this.state)\n    this.setState({\n      isAuthenticated: isAuthenticated\n    })\n  }\n\n  render() {\n\n    return (\n\n      <div className=\"App\">\n        <a className='btn btn-warning btn-large linkmargin' href='#/add-student' target='_self'>Schüler hinzufügen</a>\n        <a className='btn btn-warning btn-large linkmargin' href='#/student-overview' target='_self'>Alle Schüler</a>\n        <a className='btn btn-info btn-large linkmargin' href='http://localhost:8080/schule/export' target='_self'>Download CSV-Export</a>\n\n          <Router>\n            <Switch>\n              <Route exact path=\"/add-student\" render={(props)=> <AddStudent {...props} setAuthentification={this.setAuthentification} isAuthenticated={this.state.isAuthenticated} />} />\n              <Route exact path=\"/student-overview\" render={()=> <StudentOverview setAuthentification={this.setAuthentification} isAuthenticated={this.state.isAuthenticated} />} />\n\n              <Redirect to=\"/student-overview\" render={()=> <StudentOverview setAuthentification={this.setAuthentification} isAuthenticated={this.state.isAuthenticated} />} />\n            </Switch>\n          </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './AddStudent.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}